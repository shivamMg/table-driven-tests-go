// Code generated by MockGen. DO NOT EDIT.
// Source: api/db.go

// Package mock is a generated GoMock package.
package mock

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	api "github.com/shivamMg/table-driven-tests-go/api"
)

// MockDatabase is a mock of Database interface.
type MockDatabase struct {
	ctrl     *gomock.Controller
	recorder *MockDatabaseMockRecorder
}

// MockDatabaseMockRecorder is the mock recorder for MockDatabase.
type MockDatabaseMockRecorder struct {
	mock *MockDatabase
}

// NewMockDatabase creates a new mock instance.
func NewMockDatabase(ctrl *gomock.Controller) *MockDatabase {
	mock := &MockDatabase{ctrl: ctrl}
	mock.recorder = &MockDatabaseMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockDatabase) EXPECT() *MockDatabaseMockRecorder {
	return m.recorder
}

// CreateTODO mocks base method.
func (m *MockDatabase) CreateTODO(todo *api.TODO) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateTODO", todo)
	ret0, _ := ret[0].(error)
	return ret0
}

// CreateTODO indicates an expected call of CreateTODO.
func (mr *MockDatabaseMockRecorder) CreateTODO(todo interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateTODO", reflect.TypeOf((*MockDatabase)(nil).CreateTODO), todo)
}
